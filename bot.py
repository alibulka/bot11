from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
import os

# üîê –í—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç @BotFather
BOT_TOKEN = "7930196417:AAGFjnNmBtt41quSSZgv4E5RNUQi8-JyyR0"

# üìÅ –ü–∞–ø–∫–∞, –≥–¥–µ –ª–µ–∂–∞—Ç –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã
MEDIA_FOLDER = "audio"

# üéØ –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π –ø–æ –≥—Ä—É–ø–ø–∞–º
GROUP_FILES = {
    "1": [
        {
            "photo": "photo1.jpg",
            "audio": "katya 1.ogg",
            "text": "üìå Katya, 23",
        },
         {
            
            "audio": "katya 1.ogg",
            "text": "1. How did you first come to realize or get diagnosed as autistic, and what was that process like for you?",
        },
       
    ],
    
    
}

# üìç –û–±—Ä–∞–±–æ—Ç–∫–∞ /start: –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("1", callback_data="group_1")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! üëã\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä :", reply_markup=reply_markup)

# üìç –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã
async def group_selected(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    group_number = query.data.split("_")[1]

    files = GROUP_FILES.get(group_number)
    if not files:
        await query.message.reply_text("–§–∞–π–ª—ã –¥–ª—è —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    for item in files:
        photo_path = os.path.join(MEDIA_FOLDER, f"group{group_number}", item["photo"])
        audio_path = os.path.join(MEDIA_FOLDER, f"group{group_number}", item["audio"])
        text = item.get("text", "")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
        try:
            with open(photo_path, "rb") as photo:
                await query.message.reply_photo(photo=photo, caption=text)
        except FileNotFoundError:
            await query.message.reply_text(f"‚ùó –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {item['photo']}")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ
        try:
            with open(audio_path, "rb") as audio:
                await query.message.reply_audio(audio=audio)
        except FileNotFoundError:
            await query.message.reply_text(f"‚ùó –ê—É–¥–∏–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {item['audio']}")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(group_selected))
    application.run_polling()
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == "__main__":
    main()
